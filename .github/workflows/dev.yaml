# This workflow will build and push a new container image to Alibaba Cloud Container Registry (ACR),
# and then will deploy it to Alibaba Cloud Container Service for Kubernetes (ACK), when there is a push to the "master" branch.
#
# To use this workflow, you will need to complete the following set-up steps:
#
# 1. Create an ACR repository to store your container images.
#    You can use ACR EE instance for more security and better performance.
#    For instructions see https://www.alibabacloud.com/help/doc-detail/142168.htm
#
# 2. Create an ACK cluster to run your containerized application.
#    You can use ACK Pro cluster for more security and better performance.
#    For instructions see https://www.alibabacloud.com/help/doc-detail/95108.htm
#
# 3. Store your AccessKey pair in GitHub Actions secrets named `ACCESS_KEY_ID` and `ACCESS_KEY_SECRET`.
#    For instructions on setting up secrets see: https://developer.github.com/actions/managing-workflows/storing-secrets/
#
# 4. Change the values for the REGION_ID, REGISTRY, NAMESPACE, IMAGE, ACK_CLUSTER_ID, and ACK_DEPLOYMENT_NAME.
#

name: Build and Deploy to ACK prod

on:
  push:
    branches: [ "dev" ]
  workflow_dispatch:

# Environment variables available to all jobs and steps in this workflow.
env:
  REGION_ID: cn-shanghai
  REGISTRY: registry.cn-shanghai.aliyuncs.com
  REGISTRY_INTERNAL: registry-vpc.cn-shanghai.aliyuncs.com
  NAMESPACE: internal-projects
  IMAGE: fiber-ydns
  GITHUB_TOKEN: ${{ secrets.CICD_GITHUB_TOKEN }}

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    environment: prod

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Get current date tag
        run: |
          echo "TAG=$(date +'v%y.%m.%d-')$((10#$(date '+%H') * 60 + 10#$(date '+%M')))" >> $GITHUB_ENV

      # 1.1 Login to ACR
      - name: Login to ACR with the AccessKey pair
        uses: aliyun/acr-login@v1
        with:
          region-id: "${{ env.REGION_ID }}"
          access-key-id: "${{ secrets.ACCESS_KEY_ID }}"
          access-key-secret: "${{ secrets.ACCESS_KEY_SECRET }}"

      # 1.2 Buid and push image to ACR
      - name: Build and push image to ACR
        run: |
          docker build --build-arg GITHUB_TOKEN=$GITHUB_TOKEN --tag "$REGISTRY/$NAMESPACE/$IMAGE:$TAG" .
          docker push "$REGISTRY/$NAMESPACE/$IMAGE:$TAG"
